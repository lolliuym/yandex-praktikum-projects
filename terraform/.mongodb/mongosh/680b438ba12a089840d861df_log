{"t":{"$date":"2025-04-25T08:10:51.736Z"},"s":"I","c":"MONGOSH","id":1000000005,"ctx":"config","msg":"User updated"}
{"t":{"$date":"2025-04-25T08:10:51.753Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2025-04-25T08:10:51.754Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":"xterm-256color"},"version":"2.5.0","distributionKind":"compiled","buildArch":"x64","buildPlatform":"linux","buildTarget":"linux-x64","buildTime":"2025-04-08T13:06:58.245Z","gitVersion":"2b03591a8cde3171c86f11d4217352266f1b1a9c","nodeVersion":"v20.19.0","opensslVersion":"3.0.15+quic","sharedOpenssl":false,"runtimeArch":"x64","runtimePlatform":"linux","runtimeGlibcVersion":"2.31","deps":{"nodeDriverVersion":"6.14.2","libmongocryptVersion":"1.13.0","libmongocryptNodeBindingsVersion":"6.3.0","kerberosVersion":"2.1.0"}}}
{"t":{"$date":"2025-04-25T08:10:51.755Z"},"s":"I","c":"MONGOSH","id":1000000052,"ctx":"startup","msg":"Fetching update metadata","attr":{"updateURL":"https://downloads.mongodb.com/compass/mongosh.json","localFilePath":"/home/student/.mongodb/mongosh/update-metadata.json","currentVersion":"2.5.0"}}
{"t":{"$date":"2025-04-25T08:10:51.755Z"},"s":"I","c":"MONGOSH","id":1000000053,"ctx":"startup","msg":"Fetching update metadata complete","attr":{"latest":"2.5.0","currentVersion":"2.5.0","hasGreetingCTA":false}}
{"t":{"$date":"2025-04-25T08:10:51.854Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000049,"ctx":"mongosh-connect","msg":"Loaded system CA list","attr":{"caCount":277,"asyncFallbackError":null,"systemCertsError":null,"messages":[]}}
{"t":{"$date":"2025-04-25T08:10:52.025Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://<credentials>@rc1a-udg79n2h293n1hdk.mdb.yandexcloud.net:27018/std-ext-016-02?directConnection=true&tls=true&tlsCAFile=%2Fhome%2Fstudent%2F.mongodb%2Froot.crt&appName=mongosh+2.5.0","driver":{"name":"nodejs|mongosh","version":"6.14.2|2.5.0"},"devtoolsConnectVersion":"3.4.1","host":"rc1a-udg79n2h293n1hdk.mdb.yandexcloud.net:27018"}}
{"t":{"$date":"2025-04-25T08:10:52.052Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"rc1a-udg79n2h293n1hdk.mdb.yandexcloud.net:27018"}}
{"t":{"$date":"2025-04-25T08:10:52.177Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2025-04-25T08:10:52.393Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"userId":null,"telemetryAnonymousId":"680a3331df1b0bb899d861de","connectionUri":"<mongodb uri>","mongosh_version":"2.5.0","session_id":"680b438ba12a089840d861df","is_localhost":false,"is_do_url":false,"is_atlas_url":false,"is_atlas":false,"server_version":"6.0.19-mdb-025cb3ee-8-sgn","node_version":"v20.19.0","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":null,"api_version":null,"api_strict":null,"api_deprecation_errors":null,"atlas_hostname":null}}
{"t":{"$date":"2025-04-25T08:10:52.397Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"std-ext-016-02","arguments":{"cmd":{"ping":1}}}}
{"t":{"$date":"2025-04-25T08:10:52.397Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"std-ext-016-02","arguments":{"db":"admin"}}}
{"t":{"$date":"2025-04-25T08:10:52.452Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2025-04-25T08:10:52.458Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"std-ext-016-02","arguments":{"cmd":{"getLog":"startupWarnings"}}}}
{"t":{"$date":"2025-04-25T08:10:52.461Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"std-ext-016-02","arguments":{"db":"admin"}}}
{"t":{"$date":"2025-04-25T08:10:52.462Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"hello","class":"Database","db":"std-ext-016-02","arguments":{}}}
{"t":{"$date":"2025-04-25T08:10:52.463Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"shell-api","msg":"MongoServerError: not authorized on admin to execute command { getLog: \"startupWarnings\", lsid: { id: UUID(\"9624b835-f54e-4ce8-9367-286afec851e4\") }, $clusterTime: { clusterTime: Timestamp(1745568645, 1), signature: { hash: BinData(0, 33CF14508E7EB62FFCD056D805037E8128E6330C), keyId: 7486107514228965380 } }, $readPreference: { mode: \"primaryPreferred\" }, $db: \"admin\" }","attr":{"stack":"MongoServerError: not authorized on admin to execute command { getLog: \"startupWarnings\", lsid: { id: UUID(\"9624b835-f54e-4ce8-9367-286afec851e4\") }, $clusterTime: { clusterTime: Timestamp(1745568645, 1), signature: { hash: BinData(0, 33CF14508E7EB62FFCD056D805037E8128E6330C), keyId: 7486107514228965380 } }, $readPreference: { mode: \"primaryPreferred\" }, $db: \"admin\" }\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3273447)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3274135)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3527338)\n    at async RunCommandOperation.execute (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3497750)\n    at async topology (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3476757)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3475233)\n    at async Db.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3375649)\n    at async NodeDriverServiceProvider.runCommandWithCheck (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:214134)\n    at async Proxy.adminCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:301055)","name":"MongoServerError","message":"not authorized on admin to execute command { getLog: \"startupWarnings\", lsid: { id: UUID(\"9624b835-f54e-4ce8-9367-286afec851e4\") }, $clusterTime: { clusterTime: Timestamp(1745568645, 1), signature: { hash: BinData(0, 33CF14508E7EB62FFCD056D805037E8128E6330C), keyId: 7486107514228965380 } }, $readPreference: { mode: \"primaryPreferred\" }, $db: \"admin\" }","code":13,"errorLabelSet":{},"errorResponse":{"ok":0,"errmsg":"not authorized on admin to execute command { getLog: \"startupWarnings\", lsid: { id: UUID(\"9624b835-f54e-4ce8-9367-286afec851e4\") }, $clusterTime: { clusterTime: Timestamp(1745568645, 1), signature: { hash: BinData(0, 33CF14508E7EB62FFCD056D805037E8128E6330C), keyId: 7486107514228965380 } }, $readPreference: { mode: \"primaryPreferred\" }, $db: \"admin\" }","code":13,"codeName":"Unauthorized","$clusterTime":{"clusterTime":{"$timestamp":{"t":1745568645,"i":1}},"signature":{"hash":{"$binary":{"base64":"M88UUI5+ti/80FbYBQN+gSjmMww=","subType":"00"}},"keyId":7486107514228965000}},"operationTime":{"$timestamp":{"t":1745568645,"i":1}}},"ok":0,"codeName":"Unauthorized","$clusterTime":{"clusterTime":{"$timestamp":{"t":1745568645,"i":1}},"signature":{"hash":{"$binary":{"base64":"M88UUI5+ti/80FbYBQN+gSjmMww=","subType":"00"}},"keyId":7486107514228965000}},"operationTime":{"$timestamp":{"t":1745568645,"i":1}}}}
{"t":{"$date":"2025-04-25T08:10:52.485Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000024,"ctx":"snippets","msg":"Fetching snippet index","attr":{"refreshMode":"allow-cached"}}
{"t":{"$date":"2025-04-25T08:10:52.485Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/home/student/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2025-04-25T08:10:52.486Z"},"s":"I","c":"MONGOSH","id":1000000002,"ctx":"repl","msg":"Started REPL","attr":{"version":"2.5.0"}}
{"t":{"$date":"2025-04-25T08:10:52.493Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000027,"ctx":"snippets","msg":"Fetching snippet index done"}
{"t":{"$date":"2025-04-25T08:10:55.001Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.product.insertOne({\n  _id: getNextSequence(\"productid\"),  // автоинкрементный числовой ID\n  name: \"Сливочная\",\n  picture_url: \"<url>\",\n  price: 320\n});"}}
{"t":{"$date":"2025-04-25T08:10:55.196Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: getNextSequence is not defined","attr":{"message":"getNextSequence is not defined","name":"ReferenceError","stack":"ReferenceError: getNextSequence is not defined\n    at REPL6:228:101\n    at REPL6:247:5\n    at REPL6:251:3\n    at ContextifyScript.runInContext (node:vm:149:12)\n    at PrettyREPLServer.defaultEval (node:repl:600:22)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:12777)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:12500)\n    at node:internal/util:438:7","cause":null}}
{"t":{"$date":"2025-04-25T08:11:08.770Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.counters.insertOne({\n  _id: \"productid\",  // уникальный идентификатор счётчика для коллекции product\n  seq: 0             // начальное значение счётчика\n});"}}
{"t":{"$date":"2025-04-25T08:11:08.784Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insertOne","class":"Collection","db":"std-ext-016-02","coll":"counters","arguments":{"options":{}}}}
{"t":{"$date":"2025-04-25T08:11:15.647Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.product.insertOne({ _id: getNextSequence(\"productid\"), /* автоинкрементный числовой ID*/ name: \"Сливочная\", picture_url: \"<url>\", price: 320 });"}}
{"t":{"$date":"2025-04-25T08:11:15.669Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: getNextSequence is not defined","attr":{"message":"getNextSequence is not defined","name":"ReferenceError","stack":"ReferenceError: getNextSequence is not defined\n    at REPL11:68:101\n    at REPL11:86:5\n    at REPL11:90:3\n    at ContextifyScript.runInContext (node:vm:149:12)\n    at PrettyREPLServer.defaultEval (node:repl:600:22)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:12777)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:12500)\n    at node:internal/util:438:7","cause":null}}
{"t":{"$date":"2025-04-25T08:15:01.775Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.createCollection(\"counters\")"}}
{"t":{"$date":"2025-04-25T08:15:01.789Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"std-ext-016-02","arguments":{"name":"counters","options":{}}}}
{"t":{"$date":"2025-04-25T08:15:01.803Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Collection std-ext-016-02.counters already exists.","attr":{"errorLabelSet":{},"errorResponse":{"ok":0,"errmsg":"Collection std-ext-016-02.counters already exists.","code":48,"codeName":"NamespaceExists","$clusterTime":{"clusterTime":{"$timestamp":{"t":1745568900,"i":1}},"signature":{"hash":{"$binary":{"base64":"8cpbzpawODac8iEFGiEv2VZAvtI=","subType":"00"}},"keyId":7486107514228965000}},"operationTime":{"$timestamp":{"t":1745568900,"i":1}}},"ok":0,"code":48,"codeName":"NamespaceExists","$clusterTime":{"clusterTime":{"$timestamp":{"t":1745568900,"i":1}},"signature":{"hash":{"$binary":{"base64":"8cpbzpawODac8iEFGiEv2VZAvtI=","subType":"00"}},"keyId":7486107514228965000}},"operationTime":{"$timestamp":{"t":1745568900,"i":1}},"message":"Collection std-ext-016-02.counters already exists.","name":"MongoServerError","stack":"MongoServerError: Collection std-ext-016-02.counters already exists.\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3273447)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3274135)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3527338)\n    at async CreateCollectionOperation.executeCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3465335)\n    at async CreateCollectionOperation.executeWithoutEncryptedFieldsCheck (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3467957)\n    at async CreateCollectionOperation.execute (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3467595)\n    at async topology (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3476757)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3475233)\n    at async Db.createCollection (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3375513)","cause":null}}
{"t":{"$date":"2025-04-25T08:15:06.745Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.counters.insertOne({ _id: \"productid\", seq: 0 })"}}
{"t":{"$date":"2025-04-25T08:15:06.776Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insertOne","class":"Collection","db":"std-ext-016-02","coll":"counters","arguments":{"options":{}}}}
{"t":{"$date":"2025-04-25T08:15:06.789Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: E11000 duplicate key error collection: std-ext-016-02.counters index: _id_ dup key: { _id: \"productid\" }","attr":{"errorLabelSet":{},"errorResponse":{"index":0,"code":11000,"errmsg":"E11000 duplicate key error collection: std-ext-016-02.counters index: _id_ dup key: { _id: \"productid\" }","keyPattern":{"_id":1},"keyValue":{"_id":"productid"}},"index":0,"code":11000,"keyPattern":{"_id":1},"keyValue":{"_id":"productid"},"message":"E11000 duplicate key error collection: std-ext-016-02.counters index: _id_ dup key: { _id: \"productid\" }","name":"MongoServerError","stack":"MongoServerError: E11000 duplicate key error collection: std-ext-016-02.counters index: _id_ dup key: { _id: \"productid\" }\n    at InsertOneOperation.execute (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3488622)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async topology (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3476757)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3475233)\n    at async Collection.insertOne (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3314369)\n    at async Proxy.insertOne (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:251072)\n    at async Proxy.insertOne (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:345399)\n    at async Proxy.eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:339467)\n    at async Proxy.eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:339902)\n    at async REPL13:70:25","cause":null}}
{"t":{"$date":"2025-04-25T08:15:23.291Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"function getNextSequence(name) {\n  var ret = db.counters.findOneAndUpdate(\n    { _id: name },\n    { $inc: { seq: 1 } },\n    { returnDocument: \"after\", upsert: true }\n  );\n  return ret.value.seq;\n}"}}
{"t":{"$date":"2025-04-25T08:15:30.923Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.product.insertOne({\n  _id: getNextSequence(\"productid\"),\n  name: \"Product Name\",\n  // ... другие поля\n});"}}
{"t":{"$date":"2025-04-25T08:15:30.936Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOneAndUpdate","class":"Collection","db":"std-ext-016-02","coll":"counters","arguments":{"filter":{"_id":"productid"},"findOneAndUpdateOptions":{"returnDocument":"after","upsert":true}}}}
{"t":{"$date":"2025-04-25T08:15:30.949Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: Cannot read properties of undefined (reading 'seq')","attr":{"message":"Cannot read properties of undefined (reading 'seq')","name":"TypeError","stack":"TypeError: Cannot read properties of undefined (reading 'seq')\n    at REPL21:76:95\n    at async REPL26:68:175\n    at async ShellEvaluator.innerEval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:505944)\n    at async ShellEvaluator.customEval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:506212)\n    at async MongoshNodeRepl.eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:72185)\n    at async eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:13318)","cause":null}}
{"t":{"$date":"2025-04-25T08:16:11.204Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.counters.find()"}}
{"t":{"$date":"2025-04-25T08:16:11.212Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"std-ext-016-02","coll":"counters","arguments":{"options":{}}}}
{"t":{"$date":"2025-04-25T08:16:19.370Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.counters.insertOne({ _id: \"productid\", seq: 0 })"}}
{"t":{"$date":"2025-04-25T08:16:19.379Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insertOne","class":"Collection","db":"std-ext-016-02","coll":"counters","arguments":{"options":{}}}}
{"t":{"$date":"2025-04-25T08:16:19.386Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: E11000 duplicate key error collection: std-ext-016-02.counters index: _id_ dup key: { _id: \"productid\" }","attr":{"errorLabelSet":{},"errorResponse":{"index":0,"code":11000,"errmsg":"E11000 duplicate key error collection: std-ext-016-02.counters index: _id_ dup key: { _id: \"productid\" }","keyPattern":{"_id":1},"keyValue":{"_id":"productid"}},"index":0,"code":11000,"keyPattern":{"_id":1},"keyValue":{"_id":"productid"},"message":"E11000 duplicate key error collection: std-ext-016-02.counters index: _id_ dup key: { _id: \"productid\" }","name":"MongoServerError","stack":"MongoServerError: E11000 duplicate key error collection: std-ext-016-02.counters index: _id_ dup key: { _id: \"productid\" }\n    at InsertOneOperation.execute (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3488622)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async topology (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3476757)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3475233)\n    at async Collection.insertOne (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:3314369)\n    at async Proxy.insertOne (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:251072)\n    at async Proxy.insertOne (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:345399)\n    at async Proxy.eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:339467)\n    at async Proxy.eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:214:339902)\n    at async REPL28:70:25","cause":null}}
{"t":{"$date":"2025-04-25T08:16:25.715Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"function getNextSequence(name) {\n  var ret = db.counters.findAndModify({\n    query: { _id: name },\n    update: { $inc: { seq: 1 } },\n    new: true,\n    upsert: true\n  });\n  return ret.seq;\n}"}}
{"t":{"$date":"2025-04-25T08:16:38.121Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.product.insertOne({\n  _id: getNextSequence(\"productid\"),\n  name: \"Product Name\",\n  // другие поля\n})"}}
{"t":{"$date":"2025-04-25T08:16:38.131Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findAndModify","class":"Collection","db":"std-ext-016-02","coll":"counters","arguments":{"options":{"query":{"_id":"productid"},"update":true,"new":true,"upsert":true}}}}
{"t":{"$date":"2025-04-25T08:16:38.131Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOneAndUpdate","class":"Collection","db":"std-ext-016-02","coll":"counters","arguments":{"filter":{"_id":"productid"},"findOneAndUpdateOptions":{"upsert":true,"returnDocument":"after"}}}}
{"t":{"$date":"2025-04-25T08:16:38.146Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insertOne","class":"Collection","db":"std-ext-016-02","coll":"product","arguments":{"options":{}}}}
{"t":{"$date":"2025-04-25T08:16:38.160Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"findAndModify"}}
