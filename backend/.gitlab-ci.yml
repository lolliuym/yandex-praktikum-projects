# backend/.gitlab-ci.yml
stages:
  # - build
  # - release
  - deploy


variables:
  VERSION: "1.0.${CI_PIPELINE_ID}"
  DOCKER_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/sausage-backend:${VERSION}"
  NAMESPACE: std-ext-016-02
  MANIFEST_DIR: kubernetes/backend


# build-backend:
#   stage: build
#   image:
#     name: gcr.io/kaniko-project/executor:v1.9.0-debug
#     entrypoint: [""]
#   script:
#     - echo "Сборка и пуш бэкенда..."
#     - echo "${CI_REGISTRY_USER} ${CI_REGISTRY_PASSWORD} ${CI_PROJECT_DIR}"
#     - /kaniko/executor --context "${CI_PROJECT_DIR}/backend" --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile" --destination "${DOCKER_IMAGE_NAME}" --build-arg VERSION=${VERSION} --cache=true

#     # - /kaniko/executor
#     #   --context "${CI_PROJECT_DIR}/backend"
#     #   --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
#     #   --destination "${IMAGE}"
#     #   --cache=true

# release:
#   stage: release
#   image:
#     name: gcr.io/go-containerregistry/crane:debug
#     entrypoint: [""]
#   before_script:
#     - crane auth login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
#   script:
#     - crane tag ${DOCKER_IMAGE_NAME} ${VERSION}


deploy-backend:
  stage: deploy
  image: alpine/k8s:1.31.12
  before_script:
    - apk add --no-cache openssh-client rsync

    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_DEPLOY" | tr -d '\r' | ssh-add -
    - mkdir -p /root/.ssh
    - chmod 700 /root/.ssh
    - echo "$SSH_KNOWN_HOSTS_DEPLOY" > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/known_hosts
    - echo "CI_PROJECT_DIR='${CI_PROJECT_DIR}'"

    - mkdir  -p ~/.kube
    - echo "$KUBECONFIG_CONTENT" | base64 -d > ~/.kube/config
    - chmod 600 ~/.kube/config 

    - ssh -o BatchMode=yes -o ConnectTimeout=10 ${DEPLOY_USER}@${DEPLOY_HOST} 'echo SSH OK'

  script:
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo rm -rf ~${CI_PROJECT_DIR}/kubernetes/backend && sudo install -d -m 755 ~${CI_PROJECT_DIR}/kubernetes/backend"
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "ls -la ~${CI_PROJECT_DIR}/kubernetes/"


    - cat ./kubernetes/backend/configmap.yaml | ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo tee ~${CI_PROJECT_DIR}/kubernetes/backend/configmap.yaml   > /dev/null"
    - cat ./kubernetes/backend/service.yaml     | ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo tee ~${CI_PROJECT_DIR}/kubernetes/backend/service.yaml   > /dev/null"
    - cat ./kubernetes/backend/deployment.yaml  | ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo tee ~${CI_PROJECT_DIR}/kubernetes/backend/deployment.yaml > /dev/null"
    - cat ./kubernetes/backend/deployment.yaml  | ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo tee ~${CI_PROJECT_DIR}/kubernetes/backend/deployment.yaml > /dev/null"
    - cat ./kubernetes/backend/deployment.yaml  | ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo tee ~${CI_PROJECT_DIR}/kubernetes/backend/secrets.yaml > /dev/null"
  

    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "echo "$KUBECONFIG_CONTENT" | base64 -d > ~/.kube/config"
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} " chmod 600 ~/.kube/config    "
    
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "kubectl apply -f ~${CI_PROJECT_DIR}/kubernetes/backend -n ${NAMESPACE}"
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "kubectl set image deployment/backend backend=${DOCKER_IMAGE_NAME} -n ${NAMESPACE}"
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "kubectl rollout status deployment/backend -n ${NAMESPACE} --timeout=120s"

  environment:
    name: production
    url: https://std-ext-016-02.k8s.praktikum-services.tech

  # rules:
  #   - if: $CI_PIPELINE_SOURCE == "pipeline"
  #     changes:
  #       - backend/**
  #       - kubernetes/backend/**