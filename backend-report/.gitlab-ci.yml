# include:
#   - template: Security/Semgrep-SAST.gitlab-ci.yml

variables:
  VERSION: "1.0.${CI_PIPELINE_ID}"
  REPORT_PORT: 8080
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  DOCKER_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/sausage-backend-report:${VERSION}"
  JAVA_OPTS: -XX:MaxRAMPercentage=90
  MAVEN_OPTS: "-Dmaven.repo.local=$MAVEN_REPO_PATH"
  SAST_EXCLUDED_ANALYZERS: "eslint, nodejs-scan"
  NAMESPACE: std-ext-016-02
  MANIFEST_DIR: kubernetes/backend-report

stages:
  # - build
  # - release
  - deploy

# build-backend-report:
#   stage: build
#   image:
#     name: gcr.io/kaniko-project/executor:v1.9.0-debug
#     entrypoint: [""]
#   script:
#     - echo "Сборка и пуш бэкенда..."
#     - echo "${CI_REGISTRY_USER} ${CI_REGISTRY_PASSWORD} ${CI_PROJECT_DIR}"
#     - /kaniko/executor --context "${CI_PROJECT_DIR}/backend-report" --dockerfile "${CI_PROJECT_DIR}/backend-report/Dockerfile" --destination "${DOCKER_IMAGE_NAME}" --build-arg VERSION=${VERSION} --cache=true


# release:
#   stage: release
#   image:
#     name: gcr.io/go-containerregistry/crane:debug
#     entrypoint: [""]
#   before_script:
#     - crane auth login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
#   script:
#     - crane tag ${DOCKER_IMAGE_NAME} ${VERSION}

deploy-backend-report:
  stage: deploy
  image: alpine/k8s:1.31.12
  environment:
    name: production
    url: https://std-ext-016-02.k8s.praktikum-services.tech
  before_script:
    - apk add --no-cache openssh-client rsync

    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_DEPLOY" | tr -d '\r' | ssh-add -
    - mkdir -p /root/.ssh
    - chmod 700 /root/.ssh
    - echo "$SSH_KNOWN_HOSTS_DEPLOY" > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/known_hosts
    - echo "CI_PROJECT_DIR='${CI_PROJECT_DIR}'"

    - mkdir  -p ~/.kube
    - echo "$KUBECONFIG_CONTENT" | base64 -d > ~/.kube/config
    - chmod 600 ~/.kube/config  
  script:
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo rm -rf ~${CI_PROJECT_DIR}/kubernetes/backend-report && sudo install -d -m 755 ~${CI_PROJECT_DIR}/kubernetes/backend-report"
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "ls -la ~${CI_PROJECT_DIR}/kubernetes/"

    - cat ./kubernetes/backend-report/configmap.yaml | ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo tee ~${CI_PROJECT_DIR}/kubernetes/backend-report/configmap.yaml   > /dev/null"
    - cat ./kubernetes/backend-report/secrets.yaml     | ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo tee ~${CI_PROJECT_DIR}/kubernetes/backend-report/service.yaml   > /dev/null"
    - cat ./kubernetes/backend-report/deployment.yaml  | ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo tee ~${CI_PROJECT_DIR}/kubernetes/backend-report/deployment.yaml > /dev/null"
  

    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "echo "$KUBECONFIG_CONTENT" | base64 -d > ~/.kube/config"
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} " chmod 600 ~/.kube/config    "
    
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "kubectl apply -f ~${CI_PROJECT_DIR}/kubernetes/backend-report -n ${NAMESPACE}"
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "kubectl set image deployment/backend-report backend-report=${DOCKER_IMAGE_NAME} -n ${NAMESPACE}"
    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "kubectl rollout status deployment/backend-report -n ${NAMESPACE} --timeout=120s"