include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  VERSION: "1.0.${CI_PIPELINE_ID}"
  DOCKER_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/sausage-backend-report:${VERSION}"
  REPORT_PORT: 8080
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90
  MAVEN_OPTS: "-Dmaven.repo.local=$MAVEN_REPO_PATH"
  SAST_EXCLUDED_ANALYZERS: "eslint, nodejs-scan"

# stages:
#   - deploy

stages:
  - build
  - test
  - release
  - deploy


build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend-report"
      --dockerfile "${CI_PROJECT_DIR}/backend-report/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/sausage-backend-report:$VERSION"
      --build-arg VERSION=$VERSION
      --cache=true


semgrep-sast:
  variables:
    COMPILE: "true"
    SAST_JAVA_VERSION: 17
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  dependencies:
    - build

release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: []
  stage: release
  script:
    - crane auth login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - crane tag ${CI_REGISTRY_IMAGE}/sausage-backend-report:$VERSION $VERSION
    
deploy:
  stage: deploy
  image: docker:24.0.7-alpine3.19
  environment:
    name: production/backend-report
  before_script:
    - apk add --no-cache openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_DEPLOY" | tr -d '\r' | ssh-add -
    - mkdir -p /root/.ssh
    - chmod 700 /root/.ssh
    - echo "$SSH_KNOWN_HOSTS_DEPLOY" > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/known_hosts
    - docker context create remote --description "remote ssh" --docker "host=ssh://${DEPLOY_USER}@${DEPLOY_HOST}"

    - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo mkdir -p ${CI_PROJECT_DIR}/backend-report"


  script:
  - cat ./backend-report/deploy.sh | ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo tee ${CI_PROJECT_DIR}/backend-report/deploy.sh > /dev/null"
  - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo chmod +x ${CI_PROJECT_DIR}/backend-report/deploy.sh"
  - ssh ${DEPLOY_USER}@${DEPLOY_HOST} "sudo ls -l ${CI_PROJECT_DIR}/backend-report"
  - ssh ${DEPLOY_USER}@${DEPLOY_HOST} " sudo ${CI_PROJECT_DIR}/backend-report/deploy.sh \
      '${CI_REGISTRY_IMAGE}' \
      '${VERSION}' \
      '${SPRING_DATA_MONGODB_URI}' \
      '${CI_PROJECT_DIR}'
      '${CI_REGISTRY_USER}' \
      '${CI_REGISTRY_PASSWORD}' \
      '${DOCKER_IMAGE_NAME}'"